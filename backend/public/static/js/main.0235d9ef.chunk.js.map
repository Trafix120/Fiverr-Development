{"version":3,"sources":["NewMap.js","App.js","reportWebVitals.js","index.js"],"names":["NewMap","googleMapRef","useRef","googleMap","useEffect","googleMapScript","document","createElement","src","process","async","window","body","appendChild","addEventListener","createGoogleMap","callBluefolderApi","console","log","google","maps","Map","current","zoom","center","lat","lng","disableDefaultUI","a","url","fetch","res","json","customerData","showUserMarkers","i","length","coordinates","marker","Marker","position","map","animation","Animation","DROP","label","color","fontWeight","text","customerName","icon","path","fillColor","fillOpacity","strokeColor","strokeWeight","anchor","Point","labelOrigin","className","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"yOAmGeA,EAhGA,WACb,IAAMC,EAAeC,mBACjBC,EAAY,GAGhBC,qBAAU,WACR,IAAMC,EAAkBC,SAASC,cAAc,UAC/CF,EAAgBG,IAAhB,sDAAqEC,0CAArE,qBACAJ,EAAgBK,OAAQ,EACxBC,OAAOL,SAASM,KAAKC,YAAYR,GAEjCA,EAAgBS,iBAAiB,QAAQ,WACvCC,IACAC,SAED,IAEH,IAAMD,EAAkB,WACtBE,QAAQC,IAAIf,GACZA,EAAY,IAAIQ,OAAOQ,OAAOC,KAAKC,IAAIpB,EAAaqB,QAAS,CAC3DC,KAAM,GACNC,OAAQ,CACNC,IAAK,UACLC,KAAM,WAERC,kBAAkB,KAGhBX,EAAiB,uCAAG,gCAAAY,EAAA,sEAElBC,EAAM,GACVZ,QAAQC,IAAIT,SAKVoB,EAAI,uBARgB,SAUNC,MAAMD,GAVA,cAUlBE,EAVkB,gBAWGA,EAAIC,OAXP,OAWlBC,EAXkB,OAYtBC,EAAgBD,GAZM,kDAetBhB,QAAQC,IAAR,MAfsB,0DAAH,qDAmBjBgB,EAAkB,SAACD,GACvB,GAAuB,MAAnBA,EAAa,GAAjB,CAIAhB,QAAQC,IAAIe,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAaG,OAAQD,IACvC,GAAmC,MAA/BF,EAAaE,GAAGE,YAApB,CAIA,IAAIC,EAAS,IAAI3B,OAAOQ,OAAOC,KAAKmB,OAAO,CACzCC,SAAU,CACRf,IAAKQ,EAAaE,GAAGE,YAAYZ,IACjCC,IAAKO,EAAaE,GAAGE,YAAYX,KAEnCe,IAAKtC,EACLuC,UAAW/B,OAAOQ,OAAOC,KAAKuB,UAAUC,KACxCC,MAAO,CACLC,MAAO,QACPC,WAAY,OACZC,KAAMf,EAAaE,GAAGc,cAExBC,KAAM,CACJC,KAAK,iZAILC,UAAW,UACXC,YAAa,EACbC,YAAa,UACbC,aAAc,EACdC,OAAQ,IAAI7C,OAAOQ,OAAOC,KAAKqC,MAAM,GAAI,IACzCC,YAAa,IAAI/C,OAAOQ,OAAOC,KAAKqC,MAAM,KAAM,OAGpDxC,QAAQC,IAAIoB,EAAOY,SAMvB,OACE,qBAAKS,UAAU,MACbC,IAAK3D,KClFI4D,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OCKSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAlE,SAASmE,eAAe,SAM1BX,K","file":"static/js/main.0235d9ef.chunk.js","sourcesContent":["import React, { useRef, useEffect} from 'react'\r\nimport './App.css'\r\n\r\nconst NewMap = () => {\r\n  const googleMapRef = useRef();\r\n  var googleMap = {};\r\n\r\n  //Load Google Map script\r\n  useEffect(() => {\r\n    const googleMapScript = document.createElement(\"script\");\r\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`;\r\n    googleMapScript.async = true;\r\n    window.document.body.appendChild(googleMapScript);\r\n\r\n    googleMapScript.addEventListener(\"load\", () => {\r\n      createGoogleMap();\r\n      callBluefolderApi();\r\n    });\r\n  }, []);\r\n\r\n  const createGoogleMap = () => {\r\n    console.log(googleMap);\r\n    googleMap = new window.google.maps.Map(googleMapRef.current, {\r\n      zoom: 10,\r\n      center: {\r\n        lat: 29.749907,\r\n        lng: -95.358421,\r\n      },\r\n      disableDefaultUI: false,\r\n    });\r\n  }\r\n  const callBluefolderApi = async () => {\r\n    try {\r\n      let url = \"\"\r\n      console.log(process.env.REACT_APP_DEVELOPER_MODE);\r\n      if (process.env.REACT_APP_DEVELOPER_MODE == \"true\"){\r\n        url = \"http://localhost:9000/api/serviceRequests\"\r\n      }\r\n      else{\r\n        url=\"/api/serviceRequests\";\r\n      }\r\n      let res = await fetch(url);\r\n      let customerData = await res.json();\r\n      showUserMarkers(customerData);\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const showUserMarkers = (customerData) => {\r\n    if (customerData[0] == null){\r\n      return;\r\n    }\r\n    \r\n    console.log(customerData);\r\n    for (let i = 0; i < customerData.length; i++) {\r\n      if (customerData[i].coordinates == null){\r\n        continue;\r\n      }\r\n      //console.log(customerData[i]);\r\n      var marker = new window.google.maps.Marker({\r\n        position: {\r\n          lat: customerData[i].coordinates.lat,\r\n          lng: customerData[i].coordinates.lng,\r\n        },\r\n        map: googleMap,\r\n        animation: window.google.maps.Animation.DROP,\r\n        label: {\r\n          color: 'black',\r\n          fontWeight: 'bold',\r\n          text: customerData[i].customerName,\r\n        },\r\n        icon: {\r\n          path: `M13.04,41.77c-0.11-1.29-0.35-3.2-0.99-5.42c-0.91-3.17-4.74-9.54-5.49-10.79c-3.64-6.1-5.46-9.21-5.45-12.07\r\n              c0.03-4.57,2.77-7.72,3.21-8.22c0.52-0.58,4.12-4.47,9.8-4.17c4.73,0.24,7.67,3.23,8.45,4.07c0.47,0.51,3.22,3.61,3.31,8.11\r\n              c0.06,3.01-1.89,6.26-5.78,12.77c-0.18,0.3-4.15,6.95-5.1,10.26c-0.64,2.24-0.89,4.17-1,5.48C13.68,41.78,13.36,41.78,13.04,41.77z\r\n              `,\r\n          fillColor: '#FF0000',\r\n          fillOpacity: 1,\r\n          strokeColor: '#ffffff',\r\n          strokeWeight: 1,\r\n          anchor: new window.google.maps.Point(14, 43),\r\n          labelOrigin: new window.google.maps.Point(13.5, 50)\r\n        },\r\n      })\r\n      console.log(marker.icon);\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"Map\" \r\n      ref={googleMapRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NewMap;","import React from 'react'\nimport './App.css'\nimport NewMap from './NewMap'\n\nfunction App (){\n  return(\n    <div className=\"App\">\n      <NewMap />\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}